
==================== FINAL INTERFACE ====================
2017-07-06 06:03:48.304489 UTC

interface main@main:Main 8002
  interface hash: 03525dfc203a06f2c19bc154c6020d3f
  ABI hash: 747788494eb855567d6a829b940bce25
  export-list hash: df3aa8100885bf8c88b97bba20cb04d7
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0f10e5e76df020ab5cd42b16e22039ae
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
  Main.upperWord
module dependencies:
package dependencies: JSONParser-0.1.0.0@JSONParser-0.1.0.0-6ULWelvBf5wGbW1jlDUAsy
                      base-4.9.1.0* ghc-prim-0.5.0.0 integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  JSONParser-0.1.0.0@JSONParser-0.1.0.0-6ULWelvBf5wGbW1jlDUAsy:SimpleJSON 3a34bf7abd51713c9fd5d8c2a0fba0b0
import  -/  base-4.9.1.0:Data.Char 01433d23661edb6e5ef1536ef1e6774c
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Unicode a175ecf20bf1272d9ae31337e7da43ab
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO c9de64c5f5407c4cf1c52500c4d15200
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
7b6835e785b16b09addd7e284fd3ec07
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
9169c9e19d5092005388cbca9800434f
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True
                   eta) -}
35b303bc417a8a0a3a56e01ada80850b
  main10 :: ([GHC.Types.Char], SimpleJSON.JValue)
  {- Unfolding: ((Main.main13, Main.main11)) -}
b05b1ca0a9531feb65252626a627a517
  main11 :: SimpleJSON.JValue
  {- HasNoCafRefs, Unfolding: (SimpleJSON.JNumber Main.main12) -}
b15e98fe90f48a718d5689810e041bdc
  main12 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.0##) -}
6ee2c11568a1f08ec796a078f18b7063
  main13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "foo"#) -}
dea197fcdf29b99f1bcb7fbf2eec0ca3
  main14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
53b71c99ef98877f451df2bf424cc923
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   SimpleJSON.$fShowJValue4
                   Main.main3) -}
bba55d68a68bc74226ec2537a1c048a2
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.showList__2
                   Main.main4) -}
809b9843c8772407e15511c333ac10d2
  main4 :: [GHC.Types.Char]
  {- Unfolding: (SimpleJSON.$fShowJValue3 Main.main10 Main.main5) -}
be6a938839b3ddee420297deef0601a6
  main5 :: GHC.Base.String
  {- Unfolding: (Main.main_showl Main.main6) -}
fd4bb27a0f4ebe02ac3d51b6ba93e731
  main6 :: [(GHC.Base.String, SimpleJSON.JValue)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, SimpleJSON.JValue)
                   Main.main7
                   (GHC.Types.[] @ (GHC.Base.String, SimpleJSON.JValue))) -}
717f0da3ac7bb85d54a956be66f55bc4
  main7 :: ([GHC.Types.Char], SimpleJSON.JValue)
  {- Unfolding: ((Main.main9, Main.main8)) -}
c0a226f1bfaf6443d8fd1efcbfa93332
  main8 :: SimpleJSON.JValue
  {- HasNoCafRefs, Unfolding: (SimpleJSON.JBool GHC.Types.False) -}
9150354a3ba3c2da482741c1c7466ade
  main9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "bar"#) -}
52e005494c2be2d2419a55d04946cae5
  main_showl ::
    [([GHC.Types.Char], SimpleJSON.JValue)] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
b097da5f2ecd9bb341e5f3628eaf03e7
  upperWord :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: [GHC.Types.Char]) ->
                 case ds of wild {
                   [] -> GHC.Types.[] @ GHC.Types.Char
                   : x xs
                   -> GHC.Types.: @ GHC.Types.Char (GHC.Unicode.toUpper x) xs }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

